// Code generated by meshRPC. DO NOT EDIT.
// All changes must be done in custom client that should either embed or wrap this.

package {{.PackageName}}

import (
	"bytes"
	"encoding/json"
	"io"

	"github.com/astranet/httpserve"
)

type {{.FeaturePrefix}}RPCHandler interface {
{{.JsonHandlerInterfaceBody}}
}

var {{.FeaturePrefix}}RPCHandlerSpec {{.FeaturePrefix}}RPCHandler = &{{.RPCHandlerPrivateName}}{}

type {{.FeaturePrefix}}RPCHandlerOptions struct {
}

func check{{.FeaturePrefix}}RPCHandlerOptions(opt *{{.FeaturePrefix}}RPCHandlerOptions) *{{.FeaturePrefix}}RPCHandlerOptions {
	if opt == nil {
		opt = &{{.FeaturePrefix}}RPCHandlerOptions{}
	}
	return opt
}

func New{{.FeaturePrefix}}RPCHandler(
	svc {{.FeaturePrefix}}Service,
	opt *{{.FeaturePrefix}}RPCHandlerOptions,
) {{.FeaturePrefix}}RPCHandler {
	return &{{.RPCHandlerPrivateName}}{
		opt: check{{.FeaturePrefix}}RPCHandlerOptions(opt),
		svc: svc,
	}
}

type {{.RPCHandlerPrivateName}} struct {
	svc  {{.FeaturePrefix}}Service
	opt  *{{.FeaturePrefix}}RPCHandlerOptions
}

{{.JsonHandlerImplementationBody}}

var {{.RPCHandlerPrivateName}}MethodsMap = map[string][]string{
	"*": []string{
		"POST",
	},
}

func (_ *{{.RPCHandlerPrivateName}}) HTTPMethodsMap() map[string][]string {
	return {{.RPCHandlerPrivateName}}MethodsMap
}
